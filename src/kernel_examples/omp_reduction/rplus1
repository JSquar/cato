; Function Attrs: nounwind uwtable
define dso_local i32 @main() #0 {
entry:
  %result = alloca i32, align 4
  %0 = bitcast i32* %result to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #5
  store i32 0, i32* %result, align 4, !tbaa !2
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* @1, i32 1, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i32*)* @.omp_outlined. to void (i32*, i32*, ...)*), i32* %result)
  %1 = load i32, i32* %result, align 4, !tbaa !2
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i32 %1)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %0) #5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: norecurse nounwind uwtable
define internal void @.omp_outlined.(i32* noalias %.global_tid., i32* noalias %.bound_tid., i32* dereferenceable(4) %result) #2 {
entry:
  %result1 = alloca i32, align 4
  %.omp.reduction.red_list = alloca [1 x i8*], align 8
  %0 = bitcast i32* %result1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #5
  store i32 0, i32* %result1, align 4, !tbaa !2
  %call = call i32 @omp_get_thread_num()
  %1 = load i32, i32* %result1, align 4, !tbaa !2
  %add = add nsw i32 %1, %call
  store i32 %add, i32* %result1, align 4, !tbaa !2
  %2 = getelementptr inbounds [1 x i8*], [1 x i8*]* %.omp.reduction.red_list, i64 0, i64 0
  store i8* %0, i8** %2, align 8
  %3 = load i32, i32* %.global_tid., align 4, !tbaa !2
  %4 = bitcast [1 x i8*]* %.omp.reduction.red_list to i8*
  %5 = call i32 @__kmpc_reduce_nowait(%struct.ident_t* @0, i32 %3, i32 1, i64 8, i8* %4, void (i8*, i8*)* @.omp.reduction.reduction_func, [8 x i32]* @.gomp_critical_user_.reduction.var)
  switch i32 %5, label %.omp.reduction.default [
    i32 1, label %.omp.reduction.case1
    i32 2, label %.omp.reduction.case2
  ]

.omp.reduction.case1:                             ; preds = %entry
  %6 = load i32, i32* %result, align 4, !tbaa !2
  %7 = load i32, i32* %result1, align 4, !tbaa !2
  %add2 = add nsw i32 %6, %7
  store i32 %add2, i32* %result, align 4, !tbaa !2
  call void @__kmpc_end_reduce_nowait(%struct.ident_t* @0, i32 %3, [8 x i32]* @.gomp_critical_user_.reduction.var)
  br label %.omp.reduction.default

.omp.reduction.case2:                             ; preds = %entry
  %8 = load i32, i32* %result1, align 4, !tbaa !2
  %9 = atomicrmw add i32* %result, i32 %8 monotonic
  br label %.omp.reduction.default

.omp.reduction.default:                           ; preds = %.omp.reduction.case2, %.omp.reduction.case1, %entry
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %0) #5
  ret void
}

declare dso_local i32 @omp_get_thread_num() #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: norecurse nounwind uwtable
define internal void @.omp.reduction.reduction_func(i8* %0, i8* %1) #2 {
entry:
  %2 = bitcast i8* %0 to [1 x i8*]*
  %3 = bitcast i8* %1 to [1 x i8*]*
  %4 = getelementptr inbounds [1 x i8*], [1 x i8*]* %3, i64 0, i64 0
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast i8* %5 to i32*
  %7 = getelementptr inbounds [1 x i8*], [1 x i8*]* %2, i64 0, i64 0
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast i8* %8 to i32*
  %10 = load i32, i32* %9, align 4, !tbaa !2
  %11 = load i32, i32* %6, align 4, !tbaa !2
  %add = add nsw i32 %10, %11
  store i32 %add, i32* %9, align 4, !tbaa !2
  ret void
}
